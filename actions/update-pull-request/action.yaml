name: 'Update Pull Request'
description: 'Opened pull request.'
inputs:
  AWS_REGION:
    description: 'Terragrunt path region.'
    default: ''
    required: true
  AWS_DEV_ACCOUNT:
    description: 'Development account number.'
    required: true
  AWS_STA_ACCOUNT:
    description: 'Staging account number.'
    required: true
  AWS_PRO_ACCOUNT:
    description: 'Production account number.'
    required: true
  TERRAFORM_VERSION:
    description: 'Terragrunt Version.'
    default: '1.3.8'
    required: true
  TERRAGRUNT_VERSION:
    description: 'Terragrunt Version.'
    default: '0.58.2'
    required: true

runs:
  using: "composite"
  steps:
  - name: Checkout
    uses: actions/checkout@v4

  - name: Paths Filter
    id: paths_filter
    uses: marquesmateus93/piperoad/templates/paths-filter@master
    env:
      AWS_DEV_ACCOUNT:  ${{ env.AWS_DEV_ACCOUNT }}
      AWS_STA_ACCOUNT:  ${{ env.AWS_STA_ACCOUNT }}
      AWS_PRO_ACCOUNT:  ${{ env.AWS_PRO_ACCOUNT }}

  - name: AWS Credentials
    uses: aws-actions/configure-aws-credentials@v4
    with:
      role-to-assume: arn:aws:iam::${{ steps.paths_filter.outputs.AWS_ACCOUNT }}:role/GitHubActions
      aws-region: ${{ env.AWS_REGION }}

  - name: Terraform Install
    uses: marquesmateus93/piperoad/templates/terraform@master
    env:
      TERRAFORM_VERSION: ${{ env.TERRAFORM_VERSION }}

  - name: Terragrunt Plan
    uses: marquesmateus93/piperoad/templates/terragrunt/plan@master
    env:
      TERRAGRUNT_VERSION: ${{ env.TERRAGRUNT_VERSION }}
      TERRAGRUNT_PATH:    ${{ steps.paths_filter.outputs.ENV_FOLDER }}/${{ env.AWS_REGION }}

  - name: Update Pull Request
    uses: actions/github-script@v5
    env:
      PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
        const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
        #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
        
        <details><summary>Show Plan</summary>
        
        \`\`\`\n
        ${process.env.PLAN}
        \`\`\`
        
        </details>
        
        *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
        
        github.rest.issues.createComment({
          issue_number: ${{ github.event.inputs.PR_number }},
          owner: context.repo.owner,
          repo: context.repo.repo,
          body: output
        })